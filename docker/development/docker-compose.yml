# Docker Compose file for InfraGenius development with local Ollama

services:
  # MCP Server - Development
  mcp-server:
    build:
      context: ../../
      dockerfile: docker/development/Dockerfile
    ports:
      - "8000:8000"
      - "5678:5678" # Debug port
    environment:
      - ENVIRONMENT=development
      - CONFIG_PATH=/app/mcp_server/config.json
      - DATABASE_URL=postgresql://testuser:testpass@postgres:5432/mcptest
      - REDIS_URL=redis://redis:6379/1
      - OLLAMA_BASE_URL=http://host.docker.internal:11434 # Connect to host Ollama
      - PYTHONPATH=/app
      - DEBUG=true
    volumes:
      - ../../:/app
      - /app/venv # Prevent overwriting venv
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mcp-network
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway" # Allow connection to host services
    develop:
      watch:
        - action: sync
          path: ../../mcp_server
          target: /app/mcp_server
        - action: rebuild
          path: ../../mcp_server/requirements.txt

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=mcptest
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d mcptest"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mcp-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mcp-network
    restart: unless-stopped

  # Note: Ollama should be running locally on host (not in Docker)
  # The MCP server will connect to localhost:11434 for Ollama
  # Start Ollama locally: ollama serve

  # Development Tools

  # Adminer - Database Management
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    networks:
      - mcp-network
    profiles:
      - tools

  # Redis Commander - Redis Management
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:1
    networks:
      - mcp-network
    profiles:
      - tools

  # Mailhog - Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - mcp-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
